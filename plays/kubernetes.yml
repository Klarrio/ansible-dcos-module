---
- name: Install Kubernetes as a Service
  hosts: localhost
  serial: 1
  become: false
  tasks:

  - name: Connect to the cluster
    include: connection.yml

  - name: Create a group for Kubernetes
    dcos_iam_group:
      gid: kubernetes-group
      description: Permissions for Kubernetes
      state: present
      permissions:
        - rid: dcos:mesos:master:framework:role:*
          action: read
        - rid: dcos:mesos:master:framework:role:kubernetes-role
          action: create
        - rid: dcos:mesos:master:task:user:root
          action: create
        - rid: dcos:mesos:agent:task:user:root
          action: create
        - rid: dcos:mesos:master:reservation:role:kubernetes-role
          action: create
        - rid: dcos:mesos:master:reservation:principal:kubernetes
          action: delete
        - rid: dcos:mesos:master:volume:role:kubernetes-role
          action: create
        - rid: dcos:mesos:master:volume:principal:kubernetes
          action: delete
        - rid: dcos:service:marathon:marathon:services:/
          action: create
        - rid: dcos:service:marathon:marathon:services:/
          action: delete
        - rid: dcos:secrets:default:/kubernetes/*
          action: full
        - rid: dcos:secrets:list:default:/kubernetes
          action: read
        - rid: dcos:adminrouter:ops:ca:rw
          action: full
        - rid: dcos:adminrouter:ops:ca:ro
          action: full
        - rid: dcos:mesos:master:framework:role:slave_public/kubernetes-role
          action: create
        - rid: dcos:mesos:master:framework:role:slave_public/kubernetes-role
          action: read
        - rid: dcos:mesos:master:reservation:role:slave_public/kubernetes-role
          action: create
        - rid: dcos:mesos:master:volume:role:slave_public/kubernetes-role 
          action: create
        - rid: dcos:mesos:master:framework:role:slave_public
          action: read
        - rid: dcos:mesos:agent:framework:role:slave_public
          action: read

  - name: Create service account for Kubernetes
    dcos_iam_serviceaccount:
      sid: kubernetes
      description: 'Kubernetes Service Account'
      secret_path: kubernetes/secret
      groups: 
        - kubernetes-group
      state: present

  - name: Ensure Kubernetes is installed
    dcos_package:
      name: kubernetes
      app_id: kubernetes
      version: 1.2.2-1.10.7
      state: present
      options:
        {
          "service": {
            "name": "kubernetes",
            "service_account": "kubernetes",
            "service_account_secret": "kubernetes/secret" 
          },
          "kubernetes": {
            "high_availability": true,
            "node_count": 3,
            "authorization_mode": "RBAC",
            "public_node_count": 1
          }
        }